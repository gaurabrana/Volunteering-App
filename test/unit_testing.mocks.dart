// Mocks generated by Mockito 5.4.5 from annotations
// in VolunteeringApp/test/unit_testing.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:VolunteeringApp/DataAccessLayer/UserDAO.dart' as _i2;
import 'package:VolunteeringApp/DataAccessLayer/VolunteeringEventDAO.dart'
    as _i6;
import 'package:VolunteeringApp/DataAccessLayer/VolunteeringEventRegistrationsDAO.dart'
    as _i8;
import 'package:VolunteeringApp/Models/UserDetails.dart' as _i5;
import 'package:VolunteeringApp/Models/VolunteeringEvent.dart' as _i7;
import 'package:VolunteeringApp/Models/VolunteeringEventRegistration.dart'
    as _i9;
import 'package:VolunteeringApp/Pages/Settings/SharedPreferences.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [UserDAO].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserDAO extends _i1.Mock implements _i2.UserDAO {
  @override
  String get defaultDomain =>
      (super.noSuchMethod(
            Invocation.getter(#defaultDomain),
            returnValue: _i3.dummyValue<String>(
              this,
              Invocation.getter(#defaultDomain),
            ),
            returnValueForMissingStub: _i3.dummyValue<String>(
              this,
              Invocation.getter(#defaultDomain),
            ),
          )
          as String);

  @override
  set defaultDomain(String? _defaultDomain) => super.noSuchMethod(
    Invocation.setter(#defaultDomain, _defaultDomain),
    returnValueForMissingStub: null,
  );

  @override
  _i4.Future<void> storeUserDetails(
    String? userId,
    String? userName,
    String? email,
    String? role, {
    String? photoUrl,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #storeUserDetails,
              [userId, userName, email, role],
              {#photoUrl: photoUrl},
            ),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> storeOrganisationDetails({
    required String? userId,
    required String? mission,
    required String? activities,
    required String? projects,
    required String? benefactors,
    required String? certificate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#storeOrganisationDetails, [], {
              #userId: userId,
              #mission: mission,
              #activities: activities,
              #projects: projects,
              #benefactors: benefactors,
              #certificate: certificate,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<Map<String, dynamic>?> fetchOrganisationDetails(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchOrganisationDetails, [userId]),
            returnValue: _i4.Future<Map<String, dynamic>?>.value(),
            returnValueForMissingStub:
                _i4.Future<Map<String, dynamic>?>.value(),
          )
          as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<_i5.UserDetails?> getUserDetails(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getUserDetails, [userId]),
            returnValue: _i4.Future<_i5.UserDetails?>.value(),
            returnValueForMissingStub: _i4.Future<_i5.UserDetails?>.value(),
          )
          as _i4.Future<_i5.UserDetails?>);

  @override
  _i4.Future<List<_i5.UserDetails?>> getAllUsers() =>
      (super.noSuchMethod(
            Invocation.method(#getAllUsers, []),
            returnValue: _i4.Future<List<_i5.UserDetails?>>.value(
              <_i5.UserDetails?>[],
            ),
            returnValueForMissingStub: _i4.Future<List<_i5.UserDetails?>>.value(
              <_i5.UserDetails?>[],
            ),
          )
          as _i4.Future<List<_i5.UserDetails?>>);

  @override
  _i4.Future<void> updateName(_i5.UserDetails? user, String? newName) =>
      (super.noSuchMethod(
            Invocation.method(#updateName, [user, newName]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteUser(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteUser, [userId]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateUserToken(String? userId, String? token) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserToken, [userId, token]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String?> getFCMToken(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getFCMToken, [userId]),
            returnValue: _i4.Future<String?>.value(),
            returnValueForMissingStub: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);
}

/// A class which mocks [VolunteeringEventDAO].
///
/// See the documentation for Mockito's code generation for more information.
class MockVolunteeringEventDAO extends _i1.Mock
    implements _i6.VolunteeringEventDAO {
  @override
  String get defaultVolunteeringPhotoURL =>
      (super.noSuchMethod(
            Invocation.getter(#defaultVolunteeringPhotoURL),
            returnValue: _i3.dummyValue<String>(
              this,
              Invocation.getter(#defaultVolunteeringPhotoURL),
            ),
            returnValueForMissingStub: _i3.dummyValue<String>(
              this,
              Invocation.getter(#defaultVolunteeringPhotoURL),
            ),
          )
          as String);

  @override
  set defaultVolunteeringPhotoURL(String? _defaultVolunteeringPhotoURL) =>
      super.noSuchMethod(
        Invocation.setter(
          #defaultVolunteeringPhotoURL,
          _defaultVolunteeringPhotoURL,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> addVolunteeringEvent(
    _i7.VolunteeringEvent? volunteeringEvent,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addVolunteeringEvent, [volunteeringEvent]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i7.VolunteeringEvent?> getVolunteeringEvent(String? eventId) =>
      (super.noSuchMethod(
            Invocation.method(#getVolunteeringEvent, [eventId]),
            returnValue: _i4.Future<_i7.VolunteeringEvent?>.value(),
            returnValueForMissingStub:
                _i4.Future<_i7.VolunteeringEvent?>.value(),
          )
          as _i4.Future<_i7.VolunteeringEvent?>);

  @override
  _i4.Future<List<_i7.VolunteeringEvent>?>
  getAllFutureVolunteeringEventsWithStatus(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getAllFutureVolunteeringEventsWithStatus, [
              userId,
            ]),
            returnValue: _i4.Future<List<_i7.VolunteeringEvent>?>.value(),
            returnValueForMissingStub:
                _i4.Future<List<_i7.VolunteeringEvent>?>.value(),
          )
          as _i4.Future<List<_i7.VolunteeringEvent>?>);

  @override
  _i4.Future<List<_i7.VolunteeringEvent>?> getAllFutureVolunteeringEvents() =>
      (super.noSuchMethod(
            Invocation.method(#getAllFutureVolunteeringEvents, []),
            returnValue: _i4.Future<List<_i7.VolunteeringEvent>?>.value(),
            returnValueForMissingStub:
                _i4.Future<List<_i7.VolunteeringEvent>?>.value(),
          )
          as _i4.Future<List<_i7.VolunteeringEvent>?>);

  @override
  _i4.Future<List<_i7.VolunteeringEvent>?> getEventsByOrganiserUID(
    String? organiserUID,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getEventsByOrganiserUID, [organiserUID]),
            returnValue: _i4.Future<List<_i7.VolunteeringEvent>?>.value(),
            returnValueForMissingStub:
                _i4.Future<List<_i7.VolunteeringEvent>?>.value(),
          )
          as _i4.Future<List<_i7.VolunteeringEvent>?>);
}

/// A class which mocks [VolunteeringEventRegistrationsDAO].
///
/// See the documentation for Mockito's code generation for more information.
class MockVolunteeringEventRegistrationsDAO extends _i1.Mock
    implements _i8.VolunteeringEventRegistrationsDAO {
  @override
  _i4.Future<List<_i9.VolunteeringEventRegistration>> getAllEventIdsForUser(
    String? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getAllEventIdsForUser, [userId]),
            returnValue:
                _i4.Future<List<_i9.VolunteeringEventRegistration>>.value(
                  <_i9.VolunteeringEventRegistration>[],
                ),
            returnValueForMissingStub:
                _i4.Future<List<_i9.VolunteeringEventRegistration>>.value(
                  <_i9.VolunteeringEventRegistration>[],
                ),
          )
          as _i4.Future<List<_i9.VolunteeringEventRegistration>>);

  @override
  _i4.Future<List<_i9.VolunteeringEventRegistration>> getAllUserIdsForEvent(
    String? eventId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getAllUserIdsForEvent, [eventId]),
            returnValue:
                _i4.Future<List<_i9.VolunteeringEventRegistration>>.value(
                  <_i9.VolunteeringEventRegistration>[],
                ),
            returnValueForMissingStub:
                _i4.Future<List<_i9.VolunteeringEventRegistration>>.value(
                  <_i9.VolunteeringEventRegistration>[],
                ),
          )
          as _i4.Future<List<_i9.VolunteeringEventRegistration>>);

  @override
  _i4.Future<_i9.VolunteeringEventRegistration?> getUserRegistrationStatus({
    required String? userId,
    required String? eventId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getUserRegistrationStatus, [], {
              #userId: userId,
              #eventId: eventId,
            }),
            returnValue: _i4.Future<_i9.VolunteeringEventRegistration?>.value(),
            returnValueForMissingStub:
                _i4.Future<_i9.VolunteeringEventRegistration?>.value(),
          )
          as _i4.Future<_i9.VolunteeringEventRegistration?>);
}

/// A class which mocks [SignInSharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignInSharedPreferences extends _i1.Mock
    implements _i10.SignInSharedPreferences {
  @override
  _i4.Future<bool> isSignedIn() =>
      (super.noSuchMethod(
            Invocation.method(#isSignedIn, []),
            returnValue: _i4.Future<bool>.value(false),
            returnValueForMissingStub: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<void> setSignedIn(bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#setSignedIn, [value]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> setCurrentUserDetails(_i5.UserDetails? details) =>
      (super.noSuchMethod(
            Invocation.method(#setCurrentUserDetails, [details]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i5.UserDetails?> getCurrentUserDetails() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUserDetails, []),
            returnValue: _i4.Future<_i5.UserDetails?>.value(),
            returnValueForMissingStub: _i4.Future<_i5.UserDetails?>.value(),
          )
          as _i4.Future<_i5.UserDetails?>);

  @override
  _i4.Future<void> clearCurrentUserDetails() =>
      (super.noSuchMethod(
            Invocation.method(#clearCurrentUserDetails, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
